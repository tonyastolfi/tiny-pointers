#pragma once

#include "imports.hpp"

namespace tiny_pointers {

using batt::bit_count;

/** \brief Returns the number of 1's in `bit_set` at or before position `index`.
 */
inline u64 bit_rank(u64 bit_set, u64 index) noexcept
{
    return __builtin_popcountll(bit_set & ((u64{1} << index) - 1));
}

// clang-format off
/** \brief Returns the position of the `rank`-th 1-bit within `bitset`.
 *
 * Example:
 *
 * bit_set =
 * 0000000000000000000000000000010101101110010010111000110001111001
 *
 * rank = 8
 * mask = (2 << 8) - 1 =
 * 0000000000000000000000000000000000000000000000000000000111111111
 *                              ┌───────────────┘│││││││││┃┃┃┃┃┃┃┃┃
 *                              │ ┌──────────────┘││││││││┃┃┃┃┃┃┃┃┃
 *                              │ │ ┌─────────────┘│││││││┃┃┃┃┃┃┃┃┃
 *                              │ │ │┌─────────────┘││││││┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ ┌────────────┘│││││┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ │┌────────────┘││││┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ ││┌────────────┘│││┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ │││  ┌──────────┘││┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ │││  │  ┌────────┘│┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ │││  │  │ ┌───────┘┃┃┃┃┃┃┃┃┃
 *                              │ │ ││ │││  │  │ │┏━━━━━━━┛┃┃┃┃┃┃┃┃
 *                              │ │ ││ │││  │  │ │┃┏━━━━━━━┛┃┃┃┃┃┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┏━━━━┛┃┃┃┃┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┃┏━━━━┛┃┃┃┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┃┃   ┏━┛┃┃┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┃┃   ┃┏━┛┃┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┃┃   ┃┃┏━┛┃┃
 *                              │ │ ││ │││  │  │ │┃┃   ┃┃   ┃┃┃┏━┛┃
 *                              ▽ ▽ ▽▽ ▽▽▽  ▽  ▽ ▽▼▼   ▼▼   ▼▼▼▼  ▼
 *                         (..0010101101110010010111000110001111001) (bit_set)
 * 0000000000000000000000000000000000000000000000011000110001111001  (PDEP result)
 * |◀───────────────────────────────────────────▶│
 * CLZ = 47                                      │
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~│~~~~~~~~~~~~~~~~~
 * 6666555555555544444444443333333333222222222211111111110000000000  (bit index 10's)
 * 3210987654321098765432109876543210987654321098765432109876543210  (bit index 1's)
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~│~~~~~~~~~~~~~~~~~
 *                                               │ (63 - 47) = 16 =  (select result)
 */
// clang-format on    
inline u64 bit_select(u64 bit_set, u64 rank) noexcept
{
    return 63 - __builtin_clzll(_pdep_u64((u64{2} << rank) - 1, bit_set));
}

}  //namespace tiny_pointers
